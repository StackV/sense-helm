{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ include "common.namespace" . | quote }}
  {{- if or .Values.ingress.annotations .Values.issuer.enabled }}
  annotations: 
  {{- if .Values.ingress.annotations }}
  {{- include "common.render" (dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
  {{- end }}
  {{- if .Values.issuer.enabled }}
    cert-manager.io/issuer: {{ default (printf "%s-issuer" (include "common.name" .)) .Values.issuer.name  }}
  {{- end }}
  {{- end }}
  labels: {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
  name: {{ printf "%s-ingress" (include "common.name" .) }}
spec:
  ingressClassName: {{.Values.ingress.className}}
  rules:
    - host: {{ .Values.ingress.hostname | default .Values.global.domain }}
      http:
        paths:
          - backend:
              service:
                name: {{ printf "%s-orch" (include "common.name" .) }}
                port:
                  number: 8080
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - {{ .Values.ingress.hostname | default .Values.global.domain }}
      {{- if .Values.ingress.tlsSecret }}
      secretName: {{ printf "%s-ingress-secret" (include "common.name" .) }}
      {{- end }}
{{- end }}
